class Solution {
    public void dfs(int i, List<List<Integer>> adj, int[] visited){
        visited[i]=1;
        for(int e:adj.get(i)){
            if(visited[e]==0){
                dfs(e,adj,visited);
            }
        }
    }
    public int findCircleNum(int[][] isConnected) {
       int v = isConnected.length ;
       List<List<Integer>> adj = new ArrayList<>();
       for(int i=0;i<v;i++){
           adj.add(new ArrayList<>());
       }
       for(int i=0;i<v;i++){
           for(int j=0;j<v;j++){
               if(isConnected[i][j]==1 &&i!=j){
                adj.get(i).add(j);
                adj.get(j).add(i);}
           }

       }
       int [] visited = new int[v];
       int count=0;
       for(int i=0;i<v;i++){
           if(visited[i]==0){
               count++;
               dfs(i,adj,visited);
               
           }
       }
       return count;
    }
}
